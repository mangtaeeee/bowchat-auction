plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.postgresql:postgresql:42.7.1'

	//s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// shedlock 관련 라이브러리
	implementation 'net.javacrumbs.shedlock:shedlock-spring:5.13.0'
	implementation 'net.javacrumbs.shedlock:shedlock-provider-redis-spring:5.13.0'

	// JWT 관련 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Jackson 사용 시 필요

	// OAuth2 로그인
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// 비밀번호 암호화 (BCrypt)
	implementation 'org.springframework.security:spring-security-crypto'

	implementation 'io.github.cdimascio:dotenv-java:3.0.0'

	//p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'


	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 모니터링설정
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	//QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	implementation 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.2.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'
	testImplementation 'org.assertj:assertj-core:3.24.2'
}

tasks.named('test') {
	useJUnitPlatform()
}
